AWSTemplateFormatVersion: 2010-09-09
Description: >
  Public network load balancer (NLB)
################################################################################
Parameters:
################################################################################

  AttiniEnvironmentName:
    Type: String
    Description: The name of the environment the stack created belongs to
    Default: stage

Resources:
  PublicApiNlb:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Ref AWS::StackName
      Scheme: internet-facing
      Type: network
      LoadBalancerAttributes:
      - Key: load_balancing.cross_zone.enabled
        Value: true
      SubnetMappings:
      - AllocationId: !GetAtt ElasticIpA.AllocationId
        SubnetId:
          !ImportValue
            Fn::Sub: ${AttiniEnvironmentName}-vpc:public-subnet-az-a
      - AllocationId: !GetAtt ElasticIpB.AllocationId
        SubnetId:
          !ImportValue
            Fn::Sub: ${AttiniEnvironmentName}-vpc:public-subnet-az-b

  ElasticIpA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc

  ElasticIpB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc


  PublicApiServiceHttpTargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      # HealthCheckIntervalSeconds: 6
      HealthCheckPath: /
      HealthCheckProtocol: HTTP
      HealthyThresholdCount: 2
      UnhealthyThresholdCount: 2
      # TargetGroupAttributes:
      #   - Key: deregistration_delay.timeout_seconds
      #     Value: '10'
      Port: 80
      Protocol: TCP
      TargetType: ip
      VpcId:
        Fn::ImportValue:
          !Sub ${AttiniEnvironmentName}-vpc:id

  # This target should only reroute the end user to https
  # PublicApiServiceRerouteToHttpsTargetGroup:
  #   Type: AWS::ElasticLoadBalancingV2::TargetGroup
  #   Properties:
  #     # HealthCheckIntervalSeconds: 6
  #     HealthCheckPath: /
  #     HealthCheckProtocol: HTTP
  #     HealthyThresholdCount: 2
  #     UnhealthyThresholdCount: 2
  #     TargetGroupAttributes:
  #       - Key: deregistration_delay.timeout_seconds
  #         Value: '10'
  #     Port: 81
  #     Protocol: TCP
  #     TargetType: instance
  #     VpcId:
  #       Fn::ImportValue:
  #         !Sub ${AttiniEnvironmentName}-vpc:id


  PublicApiServiceListener80:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      # Certificates:
      #   - CertificateArn: !Ref AppCertificate
      DefaultActions:
        - TargetGroupArn: !Ref PublicApiServiceHttpTargetGroup
          Type: 'forward'
      LoadBalancerArn: !Ref PublicApiNlb
      Port: 80
      Protocol: TCP


  # PublicApiServiceListener443:
  #   Type: AWS::ElasticLoadBalancingV2::Listener
  #   Properties:
  #     # Certificates:
  #     #   - CertificateArn: !Ref AppCertificate
  #     DefaultActions:
  #       - TargetGroupArn: !Ref PublicApiServiceHttpTargetGroup
  #         Type: 'forward'
  #     LoadBalancerArn: !Ref PublicApiNlb
  #     Port: 443
  #     Protocol: TCP


  # PublicApiServiceSftpTargetGroup:
  #   Type: AWS::ElasticLoadBalancingV2::TargetGroup
  #   Properties:
  #     # HealthCheckIntervalSeconds: 6
  #     HealthCheckProtocol: TCP
  #     HealthyThresholdCount: 2
  #     UnhealthyThresholdCount: 2
  #     TargetGroupAttributes:
  #       - Key: deregistration_delay.timeout_seconds
  #         Value: '10'
  #     Port: 20
  #     Protocol: TCP
  #     TargetType: instance
  #     VpcId:
  #       Fn::ImportValue:
  #         !Sub ${AttiniEnvironmentName}-vpc:id


  # PublicApiServiceSftpListener:
  #   Type: AWS::ElasticLoadBalancingV2::Listener
  #   Properties:
  #     DefaultActions:
  #       - TargetGroupArn: !Ref PublicApiServiceSftpTargetGroup
  #         Type: 'forward'
  #     LoadBalancerArn: !Ref PublicApiNlb
  #     Port: 22
  #     Protocol: TCP


Outputs:
  PublicApiNlbDNSName:
    Value: !GetAtt  PublicApiNlb.DNSName

  PublicApiServiceHttpTargetGroup:
    Value: !Ref PublicApiServiceHttpTargetGroup

  # TargetGroupARNs:
  #   Value: !Sub ${PublicApiServiceSftpTargetGroup},${PublicApiServiceHttpTargetGroup},${PublicApiServiceRerouteToHttpsTargetGroup}
